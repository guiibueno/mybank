services:
  api:
    hostname: api
    build:
      context: ../src/accounts
      dockerfile: ./Dockerfile
    ports:
      - '8080:8080'
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_USERNAME=myuser
      - DATABASE_PASSWORD=secret
      - DATABASE_DBNAME=mydatabase
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_HOST=kafka
      - KAFKA_PORT=9092

  postgres:
    image: 'postgres:latest'
    hostname: postgres
    environment:
      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=myuser'
    ports:
      - '5432:5432'
    volumes:
      - ../src/accounts/src/main/resources\ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
  
  redis:
    image: 'redis:latest'
    hostname: redis
    ports:
      - '6379:6379'

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      - 'ZOOKEEPER_CLIENT_PORT=2181'
      - 'ZOOKEEPER_TICK_TIME=2000'
    ports:
      - '22181:2181'

  kafka:
    image: 'wurstmeister/kafka:latest'
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '59092:59092'
    environment:
      - 'KAFKA_BROKER_ID=1'
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_LISTENERS=PLAINTEXT://kafka:59092,PLAINTEXT_HOST://kafka:9092'
      - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:59092,PLAINTEXT_HOST://kafka:9092'
      - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - 'KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT'
      - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
      - 'KAFKA_CREATE_TOPICS=transactions:1:1,accounts-request:1:1,accounts-registers:1:1'

  kafdrop:
    depends_on:
      - kafka
    image: 'obsidiandynamics/kafdrop:latest'
    ports:
      - '19000:9000'
    environment:
      - 'KAFKA_BROKERCONNECT=PLAINTEXT://kafka:59092'

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus:/etc/prometheus
    depends_on:
      - api
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - '3000:3000'