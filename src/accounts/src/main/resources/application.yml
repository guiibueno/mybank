management:
  metrics:
    tags:
      application: ${spring.application.name}
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true

spring:
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_DBNAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      connectTimeout: 100
      timeout: 100
  kafka:
    consumer:
      auto-offset-reset: latest
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      group-id: consumer_${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*" # change this with your event packages
    producer:
      acks: -1
      bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

distributed-lock:
  type: redis
  timeout:
    lock: 15
  retry:
    count: 3
    sleep: 100

topics:
  transactions:
    name: transactions
  accounts:
    requests:
      name: accounts-request
    registers:
      name: accounts-registers